{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/CustomObject.ts","webpack:///src/app/EnemyObject.ts","webpack:///src/app/PointObject.ts","webpack:///src/app/TextObject.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/ctrlphs.service.ts","webpack:///src/app/game/game.component.ts","webpack:///src/app/game/game.component.html","webpack:///src/app/mainScene.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","CustomObject","scene","x","y","width","height","fillColor","add","existing","physics","body","setCollideWorldBounds","objectCursors","input","keyboard","createCursorKeys","setOrigin","initialX","initialY","time","delta","movement","checkHealth","dmg","health","setPosition","console","log","destroy","left","isDown","setVelocityX","right","up","touching","down","setVelocityY","_personalScore","undefined","v","_health","Phaser","GameObjects","Rectangle","EnemyObject","playerRef","allowGravity","overlap","overlapAction","referenced","that","getDamage","PointsObject","personalScore","TextObject","refered","style","referedFunc","setText","Text","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CtrlphsService","http","dataUrl","name","get","pipe","find","xx","Name","providedIn","GameComponent","ctrlphsService","config","type","AUTO","parent","backgroundColor","arcade","gravity","phaserGame","Game","sceneName","loadScene","getData","subscribe","getScenes","length","nm","key","stop","remove","start","callScene","MainScene","dataScene","currentDataScene","platforms","staticGroup","commonFoes","group","points","texts","square","InitialLocation","loadPlatforms","Platforms","loadEnemies","Enemies","loadPoints","Points","fontSize","color","enemies","enemy","platform","rectangle","collider","point","Scene","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export class CustomObject extends Phaser.GameObjects.Rectangle {\r\n    private objectCursors: Phaser.Types.Input.Keyboard.CursorKeys;\r\n    private initialX:integer;\r\n    private initialY:integer;\r\n\r\n    private _personalScore: integer;\r\n    private _health:integer;\r\n    \r\n\r\n    public get personalScore() : integer {\r\n        if(this._personalScore === undefined){\r\n            this._personalScore=0;\r\n        }\r\n        return this._personalScore;\r\n    }\r\n\r\n    public set personalScore(v : integer) {\r\n        this._personalScore = v;\r\n    }\r\n\r\n    \r\n    public get health() : integer {\r\n        if(this._health === undefined){\r\n            this._health=3;\r\n        }\r\n        return this._health;\r\n    }\r\n\r\n    \r\n    public set health(v : integer) {\r\n        this._health = v;\r\n    }\r\n    \r\n    \r\n    \r\n    constructor(scene: Phaser.Scene, x, y, width, height, fillColor) {\r\n        super(scene, x, y, width, height, fillColor);\r\n        scene.add.existing(this);\r\n        scene.physics.add.existing(this);\r\n        (<Phaser.Physics.Arcade.Body>this.body).setCollideWorldBounds(true);\r\n        this.objectCursors = scene.input.keyboard.createCursorKeys();\r\n        this.setOrigin(0,0);\r\n        this.initialX = x;\r\n        this.initialY = y;\r\n    }\r\n\r\n    preUpdate(time, delta) {\r\n        \r\n        this.movement();\r\n\r\n        this.checkHealth();\r\n    }\r\n\r\n    getDamage(dmg :integer){\r\n        this.health -= dmg;\r\n        this.setPosition(this.initialX,this.initialY);\r\n    }\r\n\r\n    private checkHealth(){\r\n        if(this.health <= 0){\r\n            console.log(\":[\")\r\n            this.destroy();\r\n        }\r\n    }\r\n\r\n    private movement() {\r\n        if (this.objectCursors.left.isDown) {\r\n            (<Phaser.Physics.Arcade.Body>this.body).setVelocityX(-160);\r\n        }\r\n        else if (this.objectCursors.right.isDown) {\r\n            (<Phaser.Physics.Arcade.Body>this.body).setVelocityX(160);\r\n        }\r\n        else {\r\n            (<Phaser.Physics.Arcade.Body>this.body).setVelocityX(0);\r\n        }\r\n\r\n        if (this.objectCursors.up.isDown && (<Phaser.Physics.Arcade.Body>this.body).touching.down) {\r\n            (<Phaser.Physics.Arcade.Body>this.body).setVelocityY(-300);\r\n        }\r\n    }\r\n}","import { CustomObject } from './CustomObject';\r\n\r\nexport class EnemyObject extends Phaser.GameObjects.Rectangle {\r\n\r\n    constructor(scene: Phaser.Scene, x, y, width, height, fillColor, playerRef: Phaser.GameObjects.GameObject) {\r\n        super(scene, x, y, width, height, fillColor);\r\n        scene.add.existing(this);\r\n        scene.physics.add.existing(this);\r\n        (<Phaser.Physics.Arcade.Body>this.body).allowGravity=false;\r\n        this.setOrigin(0,0);\r\n        scene.physics.add.overlap(playerRef,this,this.overlapAction,null,null);\r\n    }\r\n\r\n    preUpdate(time, delta) {\r\n\r\n    }\r\n\r\n    private overlapAction(referenced: Phaser.GameObjects.GameObject,that : EnemyObject){\r\n        if(referenced instanceof CustomObject){\r\n            (<CustomObject>referenced).getDamage(1);\r\n        }\r\n        \r\n    }\r\n\r\n}","import { CustomObject } from './CustomObject';\r\n\r\nexport class PointsObject extends Phaser.GameObjects.Rectangle {\r\n    constructor(scene: Phaser.Scene, x, y, width, height, fillColor,playerRef: Phaser.GameObjects.GameObject) {\r\n        super(scene, x, y, width, height, fillColor);\r\n        scene.add.existing(this);\r\n        scene.physics.add.existing(this);\r\n        (<Phaser.Physics.Arcade.Body>this.body).allowGravity=false;\r\n        this.setOrigin(0,0);\r\n        scene.physics.add.overlap(playerRef,this,this.overlapAction,null,null);\r\n    }\r\n\r\n    preUpdate(time, delta) {\r\n\r\n    }\r\n\r\n    private overlapAction(referenced:Phaser.GameObjects.GameObject,that : PointsObject){\r\n        if(referenced instanceof CustomObject){\r\n            (<CustomObject>referenced).personalScore += 100;\r\n            that.destroy();\r\n        }\r\n    }\r\n\r\n}","export class TextObject extends Phaser.GameObjects.Text {\r\n    private referedFunc: Function;\r\n\r\n    constructor(scene: Phaser.Scene, x, y,refered,style:Phaser.Types.GameObjects.Text.TextStyle){\r\n        super(scene,x,y,'',style);\r\n        scene.add.existing(this);\r\n        this.setOrigin(0,0);\r\n        this.referedFunc =refered\r\n        //this.referedObject=refered;\r\n    }\r\n\r\n    preUpdate(time, delta) {\r\n        this.setText(this.referedFunc());\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'phaser-angular-app';\n}\n","<router-outlet></router-outlet>\n<app-game></app-game>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GameComponent } from './game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from '@angular/common/http'\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { DataScene } from './DataScene';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CtrlphsService {\n  private dataUrl = 'static-pages/MyFile.json';\n\n  constructor(private http:HttpClient) { }\n\n  getData(name:string):Observable<DataScene>{\n    return this.http.get<DataScene[]>(this.dataUrl).pipe(map(x => { return x.find(xx => xx.Name === name) }));\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport Phaser from 'phaser';\nimport { MainScene} from '../mainScene';\nimport { CtrlphsService } from '../ctrlphs.service';\nimport { DataScene } from '../DataScene';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n  phaserGame: Phaser.Game;\n  config: Phaser.Types.Core.GameConfig;\n  dataScene: DataScene[];\n\n  constructor(private ctrlphsService:CtrlphsService) { \n    this.config = {\n      type: Phaser.AUTO,\n      height: 600,\n      width: 800,\n      //scene: [MainScene],\n      parent: 'gameContainer',\n      backgroundColor: '#dddddd',\n      physics: {\n        default: 'arcade',\n        arcade:{\n          gravity:{y:300}\n        }\n      }\n    };\n    \n  }\n\n  ngOnInit(): void {\n    this.phaserGame = new Phaser.Game(this.config);\n  }\n\n  callScene(sceneName:string){\n    this.loadScene(sceneName);\n  }\n\n  private loadScene(sceneName:string){\n    this.ctrlphsService.getData(sceneName).subscribe(x => {\n      if(this.phaserGame.scene.getScenes(true).length){\n        let nm=this.phaserGame.scene.getScenes(true)[0].scene.key;\n        this.phaserGame.scene.stop(nm);\n        this.phaserGame.scene.remove(nm);\n      }\n      this.phaserGame.scene.add(sceneName,new MainScene(x));\n      this.phaserGame.scene.start(sceneName);\n    });\n  }\n\n}\n","\n<section class=\"gameSection\">\n    <div id=\"gameContainer\">    \n    </div>\n</section>\n<section>\n    <button (click)=\"callScene('sceneA')\">scene a</button>\n    <button (click)=\"callScene('sceneB')\">scene b</button>\n</section>\n","import { CustomObject} from './CustomObject';\r\nimport { EnemyObject } from './EnemyObject';\r\nimport { PointsObject } from './PointObject';\r\nimport { TextObject } from './TextObject';\r\nimport { DataScene } from './DataScene';\r\nimport { Enemy } from './Enemy';\r\nimport { Platform } from './Platform';\r\nimport { Point } from './Point';\r\n\r\nexport class MainScene extends Phaser.Scene {\r\n    private square: CustomObject;\r\n    private platforms: Phaser.Physics.Arcade.StaticGroup;\r\n    private commonFoes: Phaser.GameObjects.Group;\r\n    private points: Phaser.GameObjects.Group;\r\n    private texts: Phaser.GameObjects.Group;\r\n    private currentDataScene: DataScene;\r\n\r\n    constructor(dataScene: DataScene){\r\n        super({key : dataScene.Name});\r\n        this.currentDataScene = dataScene;\r\n    }\r\n\r\n    create(){\r\n        this.platforms = this.physics.add.staticGroup();\r\n        this.commonFoes = this.add.group();\r\n        this.points = this.add.group();\r\n        this.texts = this.add.group();\r\n        \r\n        this.square = new CustomObject(this.scene.scene,\r\n            this.currentDataScene.InitialLocation.x,\r\n            this.currentDataScene.InitialLocation.y,\r\n            100,\r\n            100,\r\n            0x0074ff);\r\n        this.loadPlatforms(this.currentDataScene.Platforms);\r\n        this.loadEnemies(this.currentDataScene.Enemies);\r\n        this.loadPoints(this.currentDataScene.Points);\r\n        this.texts.add(new TextObject(this.scene.scene,0,0,(() => {return  `Score: ${this.square.personalScore} Health: ${this.square.health}`}),{fontSize: '16px', color: '#000'}));\r\n    }\r\n\r\n    preload(){\r\n\r\n    }\r\n\r\n    update(){\r\n\r\n    }\r\n\r\n    private loadEnemies(enemies: Enemy[]){\r\n        for(let enemy of enemies){\r\n            this.commonFoes.add(new EnemyObject(this.scene.scene, enemy.x,enemy.y,50,50,0x940900,this.square));\r\n        }\r\n    }\r\n\r\n    private loadPlatforms(platforms: Platform[]){\r\n        for(let platform of platforms){\r\n            this.platforms.add(this.add.rectangle(platform.x, platform.y, platform.width, 100, 0x00b940).setOrigin(0,0));\r\n        }\r\n\r\n        this.physics.add.collider(this.square,this.platforms);\r\n    }\r\n\r\n    private loadPoints(points: Point[]){\r\n        for(let point of points){\r\n            this.points.add(new PointsObject(this.scene.scene,point.x,point.y,50,50,0xfff237,this.square));\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}